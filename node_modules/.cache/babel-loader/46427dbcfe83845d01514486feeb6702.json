{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Tulika/Desktop/React/KeeperApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/Tulika/Desktop/React/KeeperApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/Tulika/Desktop/React/KeeperApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Tulika/Desktop/React/KeeperApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Tulika/Desktop/React/KeeperApp/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport api from \"../api\";\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  function addNote(_x) {\n    return _addNote.apply(this, arguments);\n  }\n\n  function _addNote() {\n    _addNote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newNote) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.createNote(newNote).then(function (res) {\n                setNotes(function (prevNotes) {\n                  return [].concat(_toConsumableArray(prevNotes), [res.data.data]);\n                });\n                alert(\"Note Added\");\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addNote.apply(this, arguments);\n  }\n\n  function deleteNote(id) {\n    setNotes(function (prevNotes) {\n      return prevNotes.filter(function (noteItem, index) {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), notes.length > 0 && notes.map(function (noteItem, index) {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Tulika/Desktop/React/KeeperApp/src/components/App.jsx"],"names":["React","useState","Header","Footer","Note","CreateArea","api","App","notes","setNotes","addNote","newNote","createNote","then","res","prevNotes","data","alert","catch","error","console","log","deleteNote","id","filter","noteItem","index","length","map","title","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AADa,WAIEC,OAJF;AAAA;AAAA;;AAAA;AAAA,wEAIb,iBAAuBC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQL,GAAG,CACNM,UADG,CACQD,OADR,EAEHE,IAFG,CAEE,UAAAC,GAAG,EAAI;AACXL,gBAAAA,QAAQ,CAAC,UAAAM,SAAS,EAAI;AACpB,sDAAWA,SAAX,IAAsBD,GAAG,CAACE,IAAJ,CAASA,IAA/B;AACD,iBAFO,CAAR;AAGAC,gBAAAA,KAAK,CAAC,YAAD,CAAL;AACD,eAPG,EAQHC,KARG,CAQG,UAAAC,KAAK,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC,eAVG,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJa;AAAA;AAAA;;AAkBb,WAASG,UAAT,CAAoBC,EAApB,EAAwB;AACtBd,IAAAA,QAAQ,CAAC,UAAAM,SAAS,EAAI;AACpB,aAAOA,SAAS,CAACS,MAAV,CAAiB,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC3C,eAAOA,KAAK,KAAKH,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,KAAK,CAACmB,MAAN,GAAe,CAAf,IAAoBnB,KAAK,CAACoB,GAAN,CAAU,UAACH,QAAD,EAAWC,KAAX,EAAqB;AAClD,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,KAAK,EAAED,QAAQ,CAACI,KAHlB;AAIE,MAAA,OAAO,EAAEJ,QAAQ,CAACK,OAJpB;AAKE,MAAA,QAAQ,EAAER,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVoB,CAHvB,eAcE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD;;AAED,eAAef,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport api from \"../api\"\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n\n  async function addNote(newNote){\n    await api\n      .createNote(newNote)\n      .then(res => {\n        setNotes(prevNotes => {\n          return [...prevNotes, res.data.data]\n        })\n        alert(\"Note Added\")\n      })\n      .catch(error => {\n      console.log(error)\n      })\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.length > 0 && notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}